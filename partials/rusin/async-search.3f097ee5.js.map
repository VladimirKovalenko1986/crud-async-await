{"mappings":"AAEA,MAAMA,ECDG,CACLC,WAAYC,SAASC,cAAc,cACnCC,WAAYF,SAASC,cAAc,WACnCE,KAAMH,SAASC,cAAc,YAC7BG,iBAAkBJ,SAASC,cAAc,gBDA7CH,EAAKI,WAAWG,iBAAiB,SAEjC,WACEP,EAAKM,iBAAiBE,mBAAmB,YAL5B,4D,IAQfR,EAAKC,WAAWM,iBAAiB,UAEjC,SAAqBE,GACnBA,EAAEC,iBACF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,gBAkB9BC,eAA0BC,GACxB,MAAMC,EAAQD,EAAIE,KAAIH,MAAMI,IAC1B,MAAMC,QAAaC,MAAM,uCAAuCF,KAChE,IAAKC,EAAKE,GACR,MAAM,IAAIC,MAGZ,OAAOH,EAAKI,MAAM,IAEdZ,QAAaa,QAAQC,WAAWT,GAKtC,OAJsBL,EACnBe,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBV,KAAI,EAACW,MAAEA,KAAYA,EAAM,I,EAzB5BC,CAJYlB,EACTmB,OAAO,WACPJ,QAAOR,GAAQA,IACfD,KAAIC,GAAQA,EAAKa,UAEjBC,MAAKlB,MAAMK,IACV,MAAMc,EAAWd,EAAKF,KAAI,EAACiB,QAAEA,KAAcA,EAAQ,KAC7CC,QA2BZrB,eAA0BC,GACxB,MAAMqB,EAAW,+BACXC,EAAU,kCAEVrB,EAAQD,EAAIE,KAAIH,MAAMwB,IAC1B,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,IAAKJ,EACLK,EAAGJ,EACHK,KAAM,OAGFxB,QAAaC,MAAM,GAAGgB,kBAAyBG,KAErD,IAAKpB,EAAKE,GACR,MAAM,IAAIC,MAAMH,EAAKyB,YAEvB,OAAOzB,EAAKI,MAAM,IAEdZ,QAAaa,QAAQC,WAAWT,GAKtC,OAJaL,EACVe,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBV,KAAI,EAACW,MAAEA,KAAYA,G,CAhDWiB,CAAWZ,GACxCjC,EAAKK,KAAKyC,UAoDhB,SAAsB/B,GACpB,OAAOA,EACJE,KACC,EACE8B,SACEC,WAAWC,KAAEA,EAAIC,KAAEA,GAAMC,OACzBA,GAEFC,UAAUC,QAAEA,EAAOC,KAAEA,MAErB,gEAEUD,2BACAC,qEAEwBL,WAAcC,uBACzCA,uBACAC,2BAGVI,KAAK,G,CAxEkBC,CAAarB,EAAe,IAEnDsB,OAAMC,GAAOC,QAAQC,IAAIF,KACzBG,SAAQ,KACP7D,EAAKC,WAAW6D,QAChB9D,EAAKM,iBAAiBwC,UA1Bb,2DA0B+B,G","sources":["src/js/rusin/async-search.js","src/js/rusin/components/get-refs.js"],"sourcesContent":["import { getRefs } from './components/get-refs';\n\nconst refs = getRefs();\nconst markup = `<input class=\"search-input\" type=\"text\" name=\"country\" />`;\n\nrefs.addCountry.addEventListener('click', handlerAddInput);\n\nfunction handlerAddInput() {\n  refs.conteinerWrapper.insertAdjacentHTML('beforeend', markup);\n}\n\nrefs.searchForm.addEventListener('submit', handlerForm);\n\nfunction handlerForm(e) {\n  e.preventDefault();\n  const data = new FormData(e.currentTarget);\n  const arr = data\n    .getAll('country')\n    .filter(item => item)\n    .map(item => item.trim());\n  getCountry(arr)\n    .then(async resp => {\n      const capitals = resp.map(({ capital }) => capital[0]);\n      const weatherService = await getWeather(capitals);\n      refs.list.innerHTML = createMarkup(weatherService);\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      refs.searchForm.reset();\n      refs.conteinerWrapper.innerHTML = markup;\n    });\n}\n\nasync function getCountry(arr) {\n  const resps = arr.map(async item => {\n    const resp = await fetch(`https://restcountries.com/v3.1/name/${item}`);\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  });\n  const data = await Promise.allSettled(resps);\n  const countryObject = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value[0]);\n\n  return countryObject;\n}\n\nasync function getWeather(arr) {\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const API_KEY = '9832fca16a6240d9a17162137242801';\n\n  const resps = arr.map(async city => {\n    const params = new URLSearchParams({\n      key: API_KEY,\n      q: city,\n      lang: 'uk',\n    });\n\n    const resp = await fetch(`${BASE_URL}/current.json?${params}`);\n\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n  const data = await Promise.allSettled(resps);\n  const objs = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value);\n\n  return objs;\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        current: {\n          condition: { icon, text },\n          temp_c,\n        },\n        location: { country, name },\n      }) =>\n        ` <li class=\"weather-item\">\n          <div>\n            <h2>${country}</h2>\n            <h3>${name}</h3>\n          </div>\n          <img class=\"weather-img\" src=\"${icon}\" alt=\"${text}\" />\n          <p>${text}</p>\n          <p>${temp_c}Â°C</p>\n        </li>`\n    )\n    .join('');\n}\n","function getRefs() {\n  return {\n    searchForm: document.querySelector('.js-search'),\n    addCountry: document.querySelector('.js-add'),\n    list: document.querySelector('.js-list'),\n    conteinerWrapper: document.querySelector('.js-wrapper'),\n  };\n}\n\nexport { getRefs };\n"],"names":["$e2f169b6cc78a060$var$refs","searchForm","document","querySelector","addCountry","list","conteinerWrapper","addEventListener","insertAdjacentHTML","e","preventDefault","data","FormData","currentTarget","async","arr","resps","map","item","resp","fetch","ok","Error","json","Promise","allSettled","filter","status","value","$e2f169b6cc78a060$var$getCountry","getAll","trim","then","capitals","capital","weatherService","BASE_URL","API_KEY","city","params","URLSearchParams","key","q","lang","statusText","$e2f169b6cc78a060$var$getWeather","innerHTML","current","condition","icon","text","temp_c","location","country","name","join","$e2f169b6cc78a060$var$createMarkup","catch","err","console","log","finally","reset"],"version":3,"file":"async-search.3f097ee5.js.map"}